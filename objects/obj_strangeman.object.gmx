<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_strangeman</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>spr_hitbox</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>xSpeed = 0;
ySpeed = 0;

xMoveSpeedMax = 10;
xMoveSpeed = 1;

yGravity = 1;
yGravityMax = 8;
optionalDownSpeed = 14

xDirection = 0;
yDirection = 270;

jumpSpeed = 12;

upOrDown = -1;
leftOrRight = 1;

onFloor = false;
jumpQueued = false;
spinAngle = 0;
spinSpeed = 0;

image_xscale_ext = 0; //Additional scale variables, they lerp back to 0 and are added
image_yscale_ext = 0; // to the normal scale. Use this for polish-related boopin' animations
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
// Hair stuff:
if (xSpeed &gt; 1 || xSpeed &lt; -1 || ySpeed &gt; 1 || ySpeed &lt; -1) { // Any movement beyond threshold
    // TODO: Take image rotation into account when placing hair
    if (image_index == 1) {
        tempObj = instance_create(x,y - 20,obj_cool_wave);
    } else {
        tempObj = instance_create(x,y,obj_cool_wave);
    }
    tempObj.image_index = self.image_index;
}

//Inputs
if (keyboard_check(ord('R'))) { room_restart(); }
var inputLeft = false, inputRight = false, inputDown = false;
 if ( keyboard_check( vk_left)) { inputLeft = true; }
 if ( keyboard_check( vk_right)) { inputRight = true; }
 if ( keyboard_check( vk_down) ) { inputDown = true; }

    if (inputLeft) {
        xSpeed -= xMoveSpeed;
    } else if (inputRight) {
        xSpeed += xMoveSpeed;
    } else {
        xSpeed /= 1.1;
    }
    
xSpeed = clamp(xSpeed, -xMoveSpeedMax, xMoveSpeedMax); 
    
//Update xDirection
if (xSpeed &gt; 0) {
    xDirection = 0;
    leftOrRight = 1;
    image_xscale = 1;
} else
if (xSpeed &lt; 0) {
    xDirection = 180;
    leftOrRight = -1;
    image_xscale = -1;
}

var hBool = false, vBool = false;

//check for wall
if ( place_meeting( x + xSpeed, y + upOrDown, obj_floor_1)) {
    move_contact_solid(xDirection, abs(xSpeed));
    xSpeed = 0;
    hBool = true;
}

x += xSpeed;

//Update yDirection
if (ySpeed &gt; 0) {
    yDirection = 270;
    upOrDown = -1;
} else
if (ySpeed &lt; 0) {
    yDirection = 90;
    upOrDown = 1;
}

//Gravity stuff
if ( place_meeting( x, y + ySpeed, obj_floor_1)) {
    move_contact_solid(yDirection, abs(ySpeed));
    ySpeed = 0;
    vBool = true;
    if (yDirection = 270) {
        
        if (!onFloor) {
            image_yscale_ext = -0.4; //Scale the player a bit to simulate some sort of landing animation
            image_xscale_ext = 0.5;
        }
    
        onFloor = true;
        spinSpeed = 0;  // Snap the character back upright. If we want a wipeout if your
        spinAngle = 0;  // angle is a certain threshold then this is the place to do it.
    }
} else {
    spinAngle = spinAngle + spinSpeed;
    if (spinAngle &gt;= 360 || spinAngle &lt;= -360) { // Strangeman only does one flip when going off of a sick ramp!
        spinAngle = 0;
        spinSpeed = 0;
        image_xscale_ext = 0.5;
        image_yscale_ext = -0.25;
        scr_starburst(x ,y , 8, 0, 360, 48, 5, 3, 0);
        ySpeed = -4;
    }
    if (!place_meeting( x, y + ySpeed, obj_sickjump_right) &amp;&amp; !place_meeting( x, y + ySpeed, obj_sickjump_left)) {
        if (inputDown) {
            ySpeed += optionalDownSpeed;
        } else {
            ySpeed += yGravity;
        }    
    }
 
    onFloor = false;
}

if ((!hBool and !vBool) and place_meeting(x + xSpeed, y + ySpeed, obj_floor_1)) {
    xSpeed = 0;
}
if (inputDown) {
    ySpeed = clamp(ySpeed, -100, optionalDownSpeed);
} else {
    ySpeed = clamp(ySpeed, -100, yGravityMax);    
}

//Jumperoni
if (keyboard_check_pressed( vk_up ) or keyboard_check_pressed( vk_space )) {
    jumpQueued = true;
}
if (onFloor and jumpQueued) {
    ySpeed -= jumpSpeed;
    onFloor = false;
    jumpQueued = false;
    image_yscale_ext = 0.5; //Scale the player a bit to simulate some sort of jumping animation
    image_xscale_ext = -0.4;
    scr_starburst(x ,y + 20, 8, 270, 180, 32, 1, 1, 1);
}

// Door Check:
var door = instance_place( x, y, obj_door );
if (door != noone) {
    // We are on a door.
    if (door.activate_on_contact == true || keyboard_check_pressed( vk_up )) {
        if (door.destination == room) {
            PlacePlayerAtDoor(door.destination_door_id);
        } else {
            global.destination_door_id = door.destination_door_id;
            room_goto(door.destination);
        }
    }
}

y += ySpeed;
if (inputDown) {
    image_index = 2;
} else if (onFloor) {
    image_index = 1;
} else {
    image_index = 0;
}

// lerp the sprite back to its normal scale
image_xscale_ext = lerp(image_xscale_ext, 0, 0.1);
image_yscale_ext = lerp(image_yscale_ext, 0, 0.1);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_sickjump_left">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ySpeed = -20;
xSpeed = -20;

spinSpeed = -10;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_sickjump_right">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ySpeed = -20;
xSpeed = 20;

spinSpeed = 10;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>601</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_execute_script</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>9</kind>
            <script>PlacePlayerAtDoor</script>
          </argument>
          <argument>
            <kind>0</kind>
            <string>global.destination_door_id</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite_ext(spr_strangeman,-1,x, y - 50*image_yscale_ext, image_xscale* (1 + image_xscale_ext), image_yscale * (1 + image_yscale_ext), spinAngle, c_white, 1);
//draw_self();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
